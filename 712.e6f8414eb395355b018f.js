(self.webpackChunkng_recaptcha_base=self.webpackChunkng_recaptcha_base||[]).push([[712],{6712:(s,a,n)=>{"use strict";n.r(a),n.d(a,{DemoModule:()=>b});var l=n(8583),p=n(2305),t=n(5200),e=n(7663),c=n(9752),r=n(7716);function o(s,a){1&s&&(r.TgZ(0,"h3"),r._uU(1,"Most recent token"),r.qZA())}function i(s,a){if(1&s&&(r.TgZ(0,"pre"),r._uU(1),r.qZA()),2&s){const s=r.oxw();r.xp6(1),r.Oqu(s.formatToken(s.recentToken))}}function h(s,a){1&s&&(r.TgZ(0,"h3",3),r._uU(1,"Most recent error"),r.qZA())}function j(s,a){if(1&s&&(r.TgZ(0,"pre",3),r._uU(1),r.qZA()),2&s){const s=r.oxw();r.xp6(1),r.Oqu(s.recentError.error||"Most recent execution resulted in error")}}function u(s,a){1&s&&(r.TgZ(0,"pre"),r._uU(1,"(empty)"),r.qZA())}function g(s,a){if(1&s&&(r._uU(0," Token: "),r.TgZ(1,"code"),r._uU(2),r.qZA()),2&s){const s=r.oxw().$implicit,a=r.oxw(2);r.xp6(2),r.Oqu(a.formatToken(s.token))}}function m(s,a){if(1&s&&(r.TgZ(0,"span",3),r._uU(1,"Error"),r.qZA(),r._uU(2,": "),r.TgZ(3,"code"),r._uU(4),r.qZA()),2&s){const s=r.oxw().$implicit;r.xp6(4),r.Oqu(s.error||"This execution resulted in error")}}function d(s,a){if(1&s&&(r.TgZ(0,"li"),r._uU(1," Action: "),r.TgZ(2,"code"),r._uU(3),r.qZA(),r._uU(4,". "),r.YNc(5,g,3,1,"ng-template",5),r.YNc(6,m,5,1,"ng-template",5),r.qZA()),2&s){const s=a.$implicit;r.xp6(3),r.Oqu(s.action),r.xp6(2),r.Q6J("ngIf",s.token),r.xp6(1),r.Q6J("ngIf",!s.token)}}function _(s,a){if(1&s&&(r.TgZ(0,"ol"),r.YNc(1,d,7,3,"li",4),r.qZA()),2&s){const s=r.oxw();r.xp6(1),r.Q6J("ngForOf",s.executionLog)}}const x=[{path:"",component:(()=>{class s{constructor(s){this.recaptchaV3Service=s,this.recentToken="",this.executionLog=[]}executeAction(s){this.singleExecutionSubscription&&this.singleExecutionSubscription.unsubscribe(),this.singleExecutionSubscription=this.recaptchaV3Service.execute(s).subscribe(s=>{this.recentToken=s,this.recentError=void 0},s=>{this.recentToken="",this.recentError={error:s}})}ngOnInit(){this.allExecutionsSubscription=this.recaptchaV3Service.onExecute.subscribe(s=>this.executionLog.push(s)),this.allExecutionErrorsSubscription=this.recaptchaV3Service.onExecuteError.subscribe(s=>this.executionLog.push(s))}ngOnDestroy(){this.allExecutionsSubscription&&this.allExecutionsSubscription.unsubscribe(),this.allExecutionErrorsSubscription&&this.allExecutionErrorsSubscription.unsubscribe(),this.singleExecutionSubscription&&this.singleExecutionSubscription.unsubscribe()}formatToken(s){return s?`${s.substr(0,7)}...${s.substr(-7)}`:"(empty)"}}return s.\u0275fac=function(a){return new(a||s)(r.Y36(t.YC))},s.\u0275cmp=r.Xpm({type:s,selectors:[["recaptcha-demo"]],decls:12,vars:6,consts:[[3,"click"],[4,"ngIf"],["class","error",4,"ngIf"],[1,"error"],[4,"ngFor","ngForOf"],[3,"ngIf"]],template:function(s,a){1&s&&(r.TgZ(0,"button",0),r.NdJ("click",function(){return a.executeAction("homepage")}),r._uU(1,'Execute "homepage" action'),r.qZA(),r.TgZ(2,"button",0),r.NdJ("click",function(){return a.executeAction("shoppingCart")}),r._uU(3,' Execute "shoppingCart" action\n'),r.qZA(),r.YNc(4,o,2,0,"h3",1),r.YNc(5,i,2,1,"pre",1),r.YNc(6,h,2,0,"h3",2),r.YNc(7,j,2,1,"pre",2),r.TgZ(8,"h3"),r._uU(9,"reCAPTCHA execution log"),r.qZA(),r.YNc(10,u,2,0,"pre",1),r.YNc(11,_,2,1,"ol",1)),2&s&&(r.xp6(4),r.Q6J("ngIf",a.recentToken),r.xp6(1),r.Q6J("ngIf",a.recentToken),r.xp6(1),r.Q6J("ngIf",a.recentError),r.xp6(1),r.Q6J("ngIf",a.recentError),r.xp6(3),r.Q6J("ngIf",0===a.executionLog.length),r.xp6(1),r.Q6J("ngIf",a.executionLog.length>0))},directives:[l.O5,l.sg],styles:[".error[_ngcontent-%COMP%]{color:crimson}"]}),s})(),data:{page:{feature:"v3",title:"reCAPTCHA v3 Example",content:{component:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">OnDestroy</span>, <span class="hljs-title class_">OnInit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">OnExecuteData</span>,\n  <span class="hljs-title class_">OnExecuteErrorData</span>,\n  <span class="hljs-title class_">ReCaptcha</span>V3Service,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ng-recaptcha&quot;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Subscription</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;rxjs&quot;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&quot;recaptcha-demo&quot;</span>,\n  <span class="hljs-attr">styles</span>: [\n    <span class="hljs-string">`\n      .error {\n        color: crimson;\n      }\n    `</span>,\n  ],\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&quot;./v3-demo.component.html&quot;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RecaptchaV3DemoComponent</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">OnInit</span>, <span class="hljs-title class_">OnDestroy</span> {\n  <span class="hljs-keyword">public</span> recentToken = <span class="hljs-string">&quot;&quot;</span>;\n  <span class="hljs-comment">// eslint-disable-next-line @typescript-eslint/no-explicit-any</span>\n  <span class="hljs-keyword">public</span> recentError?: { <span class="hljs-attr">error</span>: <span class="hljs-built_in">any</span> };\n  <span class="hljs-keyword">public</span> <span class="hljs-keyword">readonly</span> <span class="hljs-attr">executionLog</span>: <span class="hljs-title class_">Array</span>&lt;<span class="hljs-title class_">OnExecuteData</span> | <span class="hljs-title class_">OnExecuteErrorData</span>&gt; = [];\n\n  <span class="hljs-keyword">private</span> <span class="hljs-attr">allExecutionsSubscription</span>: <span class="hljs-title class_">Subscription</span>;\n  <span class="hljs-keyword">private</span> <span class="hljs-attr">allExecutionErrorsSubscription</span>: <span class="hljs-title class_">Subscription</span>;\n  <span class="hljs-keyword">private</span> <span class="hljs-attr">singleExecutionSubscription</span>: <span class="hljs-title class_">Subscription</span>;\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> recaptchaV3Service: ReCaptchaV3Service</span>) {}\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">executeAction</span>(<span class="hljs-attr">action</span>: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">recaptchaV3Service</span>\n      .<span class="hljs-title function_">execute</span>(action)\n      .<span class="hljs-title function_">subscribe</span>(\n        <span class="hljs-function">(<span class="hljs-params">token</span>) =&gt;</span> {\n          <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentToken</span> = token;\n          <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentError</span> = <span class="hljs-literal">undefined</span>;\n        },\n        <span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> {\n          <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentToken</span> = <span class="hljs-string">&quot;&quot;</span>;\n          <span class="hljs-comment">// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment</span>\n          <span class="hljs-variable language_">this</span>.<span class="hljs-property">recentError</span> = { error };\n        }\n      );\n  }\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">ngOnInit</span>(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionsSubscription</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">recaptchaV3Service</span>.<span class="hljs-property">onExecute</span>.<span class="hljs-title function_">subscribe</span>(\n      <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">executionLog</span>.<span class="hljs-title function_">push</span>(data)\n    );\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionErrorsSubscription</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">recaptchaV3Service</span>.<span class="hljs-property">onExecuteError</span>.<span class="hljs-title function_">subscribe</span>(\n      <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">executionLog</span>.<span class="hljs-title function_">push</span>(data)\n    );\n  }\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">ngOnDestroy</span>(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionsSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionsSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionErrorsSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">allExecutionErrorsSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">singleExecutionSubscription</span>.<span class="hljs-title function_">unsubscribe</span>();\n    }\n  }\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">formatToken</span>(<span class="hljs-attr">token</span>: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">string</span> {\n    <span class="hljs-keyword">if</span> (!token) {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;(empty)&quot;</span>;\n    }\n\n    <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${token.substr(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>)}</span>...<span class="hljs-subst">${token.substr(-<span class="hljs-number">7</span>)}</span>`</span>;\n  }\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;executeAction(&#x27;homepage&#x27;)&quot;</span>&gt;</span>Execute &quot;homepage&quot; action<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;executeAction(&#x27;shoppingCart&#x27;)&quot;</span>&gt;</span>\n  Execute &quot;shoppingCart&quot; action\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentToken&quot;</span>&gt;</span>Most recent token<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentToken&quot;</span>&gt;</span>{{ formatToken(recentToken) }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentError&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Most recent error<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;recentError&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>{{\n  recentError.error || &quot;Most recent execution resulted in error&quot;\n}}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>reCAPTCHA execution log<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;executionLog.length === 0&quot;</span>&gt;</span>(empty)<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">ol</span> *<span class="hljs-attr">ngIf</span>=<span class="hljs-string">&quot;executionLog.length &gt; 0&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">&quot;let entry of executionLog&quot;</span>&gt;</span>\n    Action: <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ entry.action }}&lt;/code\n    &gt;.\n    <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> [<span class="hljs-attr">ngIf</span>]=<span class="hljs-string">&quot;entry.token&quot;</span>&gt;</span>\n      Token: <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ formatToken(entry.token) }}<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> [<span class="hljs-attr">ngIf</span>]=<span class="hljs-string">&quot;!entry.token&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Error<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>:\n      <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>{{ entry.error || &quot;This execution resulted in error&quot; }}<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span>\n',module:{"":'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-title class_">Recaptcha</span>V3Module } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Recaptcha</span>V3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Recaptcha</span>V3DemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">Recaptcha</span>V3DemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">Recaptcha</span>V3Module,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n',fr:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-title class_">Recaptcha</span>V3Module, <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Recaptcha</span>V3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Recaptcha</span>V3DemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">Recaptcha</span>V3DemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">Recaptcha</span>V3Module,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n',de:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-title class_">Recaptcha</span>V3Module, <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Recaptcha</span>V3DemoComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./v3-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Recaptcha</span>V3DemoComponent,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">Recaptcha</span>V3DemoComponent],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">Recaptcha</span>V3Module,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_V3_SITE_KEY</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;6LeGCZAUAAAAADuhzcuvSB-lYDsxJBl9HUWtZkUM&#x27;</span> },\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n'}}}}}];let b=(()=>{class s{}return s.\u0275fac=function(a){return new(a||s)},s.\u0275mod=r.oAB({type:s}),s.\u0275inj=r.cJS({providers:[{provide:t.We,useValue:c.$},{provide:t.BZ,useValue:{siteKey:c.q}},{provide:t.oS,useValue:(0,e.g)()}],imports:[[p.Bz.forChild(x),t.dw,l.ez]]}),s})()}}]);