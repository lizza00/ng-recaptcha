(self.webpackChunkng_recaptcha_base=self.webpackChunkng_recaptcha_base||[]).push([[156],{9156:(s,a,n)=>{"use strict";n.r(a),n.d(a,{DemoModule:()=>j});var l=n(8583),p=n(3679),t=n(2305),c=n(5200),o=n(7663),e=n(9752),r=n(7716);const h=[{path:"",component:(()=>{class s{constructor(){this.formModel={}}}return s.\u0275fac=function(a){return new(a||s)},s.\u0275cmp=r.Xpm({type:s,selectors:[["recaptcha-demo"]],decls:14,vars:5,consts:[["captchaProtectedForm","ngForm"],["name","captcha","required","",3,"ngModel","ngModelChange"],["captchaControl","ngModel"],[1,"error",3,"hidden"],[1,"success",3,"hidden"],[3,"click"]],template:function(s,a){if(1&s&&(r.TgZ(0,"form",null,0),r.TgZ(2,"re-captcha",1,2),r.NdJ("ngModelChange",function(s){return a.formModel.captcha=s}),r.qZA(),r.TgZ(4,"div",3),r._uU(5,"Captcha must be solved"),r.qZA(),r.TgZ(6,"div",4),r._uU(7,"Captcha is valid"),r.qZA(),r.TgZ(8,"div",3),r._uU(9,"The form must be filled out"),r.qZA(),r.TgZ(10,"div",4),r._uU(11,"The form is valid"),r.qZA(),r.TgZ(12,"button",5),r.NdJ("click",function(){return a.formModel.captcha=""}),r._uU(13,"Reset Captcha"),r.qZA(),r.qZA()),2&s){const s=r.MAs(1),n=r.MAs(3);r.xp6(2),r.Q6J("ngModel",a.formModel.captcha),r.xp6(2),r.Q6J("hidden",n.valid||n.pristine),r.xp6(2),r.Q6J("hidden",!n.valid),r.xp6(2),r.Q6J("hidden",s.form.valid),r.xp6(2),r.Q6J("hidden",!s.form.valid)}},directives:[p._Y,p.JL,p.F,c.wT,c.Vd,p.Q7,p.JJ,p.On],styles:[".error[_ngcontent-%COMP%]{color:crimson}.success[_ngcontent-%COMP%]{color:green}"]}),s})(),data:{page:{feature:"forms",title:"Forms Example",content:{component:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> FormModel {\n  captcha?: <span class="hljs-built_in">string</span>;\n}\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&quot;recaptcha-demo&quot;</span>,\n  <span class="hljs-attr">styles</span>: [\n    <span class="hljs-string">`\n      .error {\n        color: crimson;\n      }\n      .success {\n        color: green;\n      }\n    `</span>,\n  ],\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&quot;./forms-demo.component.html&quot;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FormsDemoComponent</span> {\n  <span class="hljs-keyword">public</span> <span class="hljs-attr">formModel</span>: <span class="hljs-title class_">FormModel</span> = {};\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">form</span> #<span class="hljs-attr">captchaProtectedForm</span>=<span class="hljs-string">&quot;ngForm&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">re-captcha</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;formModel.captcha&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;captcha&quot;</span> <span class="hljs-attr">required</span> #<span class="hljs-attr">captchaControl</span>=<span class="hljs-string">&quot;ngModel&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">re-captcha</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;captchaControl.valid || captchaControl.pristine&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>Captcha must be solved<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;!captchaControl.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Captcha is valid<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;captchaProtectedForm.form.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>The form must be filled out<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> [<span class="hljs-attr">hidden</span>]=<span class="hljs-string">&quot;!captchaProtectedForm.form.valid&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>The form is valid<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;formModel.captcha = &#x27;&#x27;&quot;</span>&gt;</span>Reset Captcha<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n',module:{"":'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaFormsModule</span>, <span class="hljs-title class_">RecaptchaModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsDemoComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">FormsDemoComponent</span>,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">FormsDemoComponent</span>],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">RecaptchaModule</span>,\n    <span class="hljs-title class_">RecaptchaFormsModule</span>,\n    <span class="hljs-title class_">FormsModule</span>,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n',fr:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaFormsModule</span>, <span class="hljs-title class_">RecaptchaModule</span>, <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsDemoComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">FormsDemoComponent</span>,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">FormsDemoComponent</span>],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">RecaptchaModule</span>,\n    <span class="hljs-title class_">RecaptchaFormsModule</span>,\n    <span class="hljs-title class_">FormsModule</span>,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n',de:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaFormsModule</span>, <span class="hljs-title class_">RecaptchaModule</span>, <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsDemoComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./forms-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">FormsDemoComponent</span>,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">FormsDemoComponent</span>],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">RecaptchaModule</span>,\n    <span class="hljs-title class_">RecaptchaFormsModule</span>,\n    <span class="hljs-title class_">FormsModule</span>,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n'}}}}}];let j=(()=>{class s{}return s.\u0275fac=function(a){return new(a||s)},s.\u0275mod=r.oAB({type:s}),s.\u0275inj=r.cJS({providers:[{provide:c.We,useValue:e.$},{provide:c.BZ,useValue:{siteKey:e.q}},{provide:c.oS,useValue:(0,o.g)()}],imports:[[t.Bz.forChild(h),c.a,c.lQ,p.u5,l.ez]]}),s})()}}]);