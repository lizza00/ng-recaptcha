(self.webpackChunkng_recaptcha_base=self.webpackChunkng_recaptcha_base||[]).push([[557],{2557:(s,a,n)=>{"use strict";n.r(a),n.d(a,{DemoModule:()=>h});var l=n(8583),p=n(2305),t=n(5200),e=n(7663),c=n(9752),o=n(7716);const r=[{path:"",component:(()=>{class s{constructor(){this.captchaResponse=""}resolved(s){const a=s?`${s.substr(0,7)}...${s.substr(-7)}`:s;this.captchaResponse+=`${JSON.stringify(a)}\n`}onError(s){this.captchaResponse+="ERROR; error details (if any) have been logged to console\n",console.log("reCAPTCHA error encountered; details:",s)}}return s.\u0275fac=function(a){return new(a||s)},s.\u0275cmp=o.Xpm({type:s,selectors:[["recaptcha-demo"]],decls:8,vars:1,consts:[["errorMode","handled","size","invisible",3,"resolved","error"],["captchaRef","reCaptcha"],[3,"click"]],template:function(s,a){if(1&s){const s=o.EpF();o.TgZ(0,"re-captcha",0,1),o.NdJ("resolved",function(s){return a.resolved(s)})("error",function(s){return a.onError(s)}),o.qZA(),o.TgZ(2,"button",2),o.NdJ("click",function(){return o.CHM(s),o.MAs(1).execute()}),o._uU(3,"Submit"),o.qZA(),o.TgZ(4,"button",2),o.NdJ("click",function(){return o.CHM(s),o.MAs(1).reset()}),o._uU(5,"Reset"),o.qZA(),o.TgZ(6,"pre"),o._uU(7),o.qZA()}2&s&&(o.xp6(7),o.hij("reCAPTCHA response log:\n",a.captchaResponse||"(empty)",""))},directives:[t.wT],encapsulation:2}),s})(),data:{page:{feature:"invisible",title:"Invisible reCAPTCHA API Example",content:{component:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@angular/core&quot;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaErrorParameters</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ng-recaptcha&quot;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&quot;recaptcha-demo&quot;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&quot;./invisible-demo.component.html&quot;</span>,\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InvisibleDemoComponent</span> {\n  <span class="hljs-keyword">public</span> captchaResponse = <span class="hljs-string">&quot;&quot;</span>;\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">resolved</span>(<span class="hljs-attr">captchaResponse</span>: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">const</span> newResponse = captchaResponse\n      ? <span class="hljs-string">`<span class="hljs-subst">${captchaResponse.substr(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>)}</span>...<span class="hljs-subst">${captchaResponse.substr(-<span class="hljs-number">7</span>)}</span>`</span>\n      : captchaResponse;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">captchaResponse</span> += <span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-built_in">JSON</span>.stringify(newResponse)}</span>\\n`</span>;\n  }\n\n  <span class="hljs-keyword">public</span> <span class="hljs-title function_">onError</span>(<span class="hljs-attr">errorDetails</span>: <span class="hljs-title class_">RecaptchaErrorParameters</span>): <span class="hljs-built_in">void</span> {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">captchaResponse</span> += <span class="hljs-string">`ERROR; error details (if any) have been logged to console\\n`</span>;\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`reCAPTCHA error encountered; details:`</span>, errorDetails);\n  }\n}\n',html:'<span class="hljs-tag">&lt;<span class="hljs-name">re-captcha</span>\n  #<span class="hljs-attr">captchaRef</span>=<span class="hljs-string">&quot;reCaptcha&quot;</span>\n  (<span class="hljs-attr">resolved</span>)=<span class="hljs-string">&quot;resolved($event)&quot;</span>\n  (<span class="hljs-attr">error</span>)=<span class="hljs-string">&quot;onError($event)&quot;</span>\n  <span class="hljs-attr">errorMode</span>=<span class="hljs-string">&quot;handled&quot;</span>\n  <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;invisible&quot;</span>\n&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">re-captcha</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;captchaRef.execute()&quot;</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;captchaRef.reset()&quot;</span>&gt;</span>Reset<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>\nreCAPTCHA response log:\n{{ captchaResponse || &quot;(empty)&quot; }}&lt;/pre\n&gt;\n',module:{"":'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">InvisibleDemoComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">InvisibleDemoComponent</span>,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">InvisibleDemoComponent</span>],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">RecaptchaModule</span>,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n',fr:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaModule</span>, <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">InvisibleDemoComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">InvisibleDemoComponent</span>,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">InvisibleDemoComponent</span>],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">RecaptchaModule</span>,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;fr&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n',de:'<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NgModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CommonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Routes</span>, <span class="hljs-title class_">RouterModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/router&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RecaptchaModule</span>, <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ng-recaptcha&#x27;</span>;\n\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">InvisibleDemoComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.component&#x27;</span>;\n<span class="hljs-keyword">import</span> { settings } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./invisible-demo.data&#x27;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Routes</span> = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n    <span class="hljs-attr">component</span>: <span class="hljs-title class_">InvisibleDemoComponent</span>,\n    <span class="hljs-attr">data</span>: { <span class="hljs-attr">page</span>: settings },\n  },\n];\n\n<span class="hljs-meta">@NgModule</span>({\n  <span class="hljs-attr">declarations</span>: [<span class="hljs-title class_">InvisibleDemoComponent</span>],\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">RouterModule</span>.<span class="hljs-title function_">forChild</span>(routes),\n    <span class="hljs-title class_">RecaptchaModule</span>,\n    <span class="hljs-title class_">CommonModule</span>,\n  ],\n  <span class="hljs-attr">providers</span>: [\n    { <span class="hljs-attr">provide</span>: <span class="hljs-variable constant_">RECAPTCHA_LANGUAGE</span>, <span class="hljs-attr">useValue</span>: <span class="hljs-string">&#x27;de&#x27;</span> },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DemoModule</span> { }\n'}}}}}];let h=(()=>{class s{}return s.\u0275fac=function(a){return new(a||s)},s.\u0275mod=o.oAB({type:s}),s.\u0275inj=o.cJS({providers:[{provide:t.We,useValue:c.$},{provide:t.BZ,useValue:{siteKey:c.q}},{provide:t.oS,useValue:(0,e.g)()}],imports:[[p.Bz.forChild(r),t.a,l.ez]]}),s})()}}]);